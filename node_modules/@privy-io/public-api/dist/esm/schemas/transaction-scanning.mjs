import{z as t}from"zod";const o=t.object({chain_id:t.string(),metadata:t.object({domain:t.string()}),request:t.object({method:t.string(),params:t.array(t.any())})});let i=t.object({status:t.literal("Error"),error:t.string()}),a=t.object({status:t.literal("Success"),result_type:t.string()}),r=t.discriminatedUnion("status",[i,a]),n=t.object({type:t.string().optional(),symbol:t.string().optional(),logo_url:t.string().optional(),name:t.string().optional()}),s=t.object({value:t.string().optional(),usd_price:t.string().optional()}),e=t.object({asset:n,in:t.array(s),out:t.array(s)}),l=t.object({asset:n,spenders:t.record(t.string(),s)}),c=t.object({function_selector:t.string(),function_signature:t.string().optional(),function_declaration:t.string().optional()}),g=t.object({from:t.string().optional(),to:t.string().optional(),value:t.string().optional(),data:t.string().optional(),gas:t.string().optional(),gas_price:t.string().optional(),block_tag:t.string().optional(),chain:t.string().optional(),calldata:c.optional()}),p=t.object({status:t.literal("Error"),error:t.string()}),u=t.object({status:t.literal("Success"),params:g.optional(),assets_diffs:t.array(e),exposures:t.array(l)}),d=t.discriminatedUnion("status",[p,u]);const b=t.object({validation:r,simulation:d});export{o as TransactionScanningInput,b as TransactionScanningResponse};
