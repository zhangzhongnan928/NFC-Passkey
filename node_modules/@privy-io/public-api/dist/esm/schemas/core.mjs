import r from"bs58";import{parsePhoneNumber as e}from"libphonenumber-js/max";import{getAddress as i}from"viem";import{z as o}from"zod";const t=o.string({required_error:"Privy DID must be included",invalid_type_error:"Privy DID is not a valid string"}).min(1).transform((r=>r.replace("did:privy:",""))),d=o.string({required_error:"Email address must be provided",invalid_type_error:"Email address must be a valid string"}).email("Invalid email address").transform((r=>r.toLowerCase())),n=o.string({required_error:"Verification code must be provided",invalid_type_error:"Invalid verification code"}).length(6,"Verification code must have 6 digits."),s=o.string({required_error:"Ethereum address must be provided",invalid_type_error:"Invalid Ethereum address"}).transform(((r,e)=>v(r)||(e.addIssue({code:o.ZodIssueCode.custom,message:"Invalid Ethereum address"}),o.NEVER))),a=o.string({required_error:"Solana address must be provided",invalid_type_error:"Invalid Solana address"}).trim().transform(((e,i)=>{try{r.decode(e)}catch(r){return i.addIssue({code:o.ZodIssueCode.custom,message:"Invalid Solana address"}),o.NEVER}return e})),m=o.string({required_error:"Phone number must be included",invalid_type_error:"Phone number is not a valid string"}).refine((r=>{try{return void 0!==u(r)}catch(r){return!1}}),{message:"Phone number is not valid"}).transform((r=>u(r)||""));function u(r){let i=e(r,"US");if(i?.isPossible())return i.formatInternational()}function l(r){return!!v(r)}function v(r){if("string"==typeof r)try{return i(r.trim())}catch(r){}}const c=o.object({mode:o.enum(["no-signup","login-or-sign-up"]).optional()});export{c as AuthenticateMode,d as Email,n as PasswordlessCode,m as PhoneNumber,a as SolanaWalletAddress,t as UserId,s as WalletAddress,l as isValidAddress,v as normalizeEthereumAddress,u as normalizePhoneNumber};
