import{FarcasterInit as e,FarcasterStatus as t,FarcasterAuthenticate as i,FarcasterLink as r,FarcasterUnlink as a}from"@privy-io/public-api";import{maybeCreateWalletOnLogin as n}from"./maybeCreateWalletOnLogin.mjs";import"../../utils/getUserEmbeddedEthereumWallet.mjs";import"../../utils/getAllUserEmbeddedEthereumWallets.mjs";import"../../utils/getUserEmbeddedSolanaWallet.mjs";import"../../utils/getAllUserEmbeddedSolanaWallets.mjs";import"../../utils/shouldCreateEmbeddedEthWallet.mjs";import"../../utils/shouldCreateEmbeddedSolWallet.mjs";class s{async initializeAuth({relyingParty:t,redirectUrl:i,token:r}){return await this._privyInternal.fetch(e,{body:{relying_party:t,redirect_url:i,token:r}})}async getFarcasterStatus({channel_token:e}){return await this._privyInternal.fetch(t,{headers:{"farcaster-channel-token":e}})}async authenticate({channel_token:e,message:t,signature:r,fid:a,mode:s},l){let d=await this._privyInternal.fetch(i,{body:{channel_token:e,message:t,signature:r,fid:a,mode:s}});await this._privyInternal.session.updateWithTokensResponse(d);let o=await n(this._embedded,d,l?.embedded);return this._privyInternal.callbacks?.setUser?.(o.user),o}async link({channel_token:e,message:t,signature:i,fid:a}){await this._privyInternal.fetch(r,{body:{channel_token:e,message:t,signature:i,fid:a}});let n=await this._privyInternal.refreshSession();return{user:n.user,identity_token:n.identity_token}}async unlink({fid:e}){await this._privyInternal.fetch(a,{body:{fid:e}});let t=await this._privyInternal.refreshSession();return{user:t.user,identity_token:t.identity_token}}constructor(e,t){this._privyInternal=e,this._embedded=t}}export{s as default};
