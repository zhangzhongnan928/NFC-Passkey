import{BigNumber as r}from"@ethersproject/bignumber";import{arbitrum as e,arbitrumSepolia as t}from"@privy-io/chains";import{convertBigNumberish as i}from"../utils/ethers.mjs";const a=r=>[e.id,t.id].includes(r),o=async(e,t)=>{if(!a(e.chainId))throw Error("Invalid chain ID for Arbitrum gas estimation.");if(void 0===e.type&&(e.type=2),e.maxFeePerGas)return e;try{let{lastBaseFeePerGas:a}=await t.getFeeData();if(a){let t=a.mul(r.from(120)).div(r.from(100));e.maxFeePerGas=i(t),e.maxPriorityFeePerGas=i(r.from(0))}}catch(r){throw Error(`Failed to set gas price for Arbitrum transaction: ${r}.`)}return e};export{o as defaultGasForArbitrum,a as isArbitrum};
