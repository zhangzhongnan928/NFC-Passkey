"use strict";var t=require("zod"),i=require("./core.js");require("bs58"),require("libphonenumber-js/max"),require("viem");const n=t.z.enum(["bridge","bridge-sandbox"]),r=t.z.object({provider:n}),e=t.z.union([t.z.object({status:t.z.literal("completed")}),t.z.object({status:t.z.literal("incomplete"),url:t.z.string()})]),s=t.z.enum(["not_found","active","awaiting_questionnaire","awaiting_ubo","incomplete","not_started","offboarded","paused","rejected","under_review"]),a=t.z.object({provider:n}),o=t.z.object({user_id:t.z.string(),provider_user_id:t.z.string().optional(),status:s}),m=t.z.object({street_line_1:t.z.string().trim().min(1),street_line_2:t.z.string().trim().min(1).optional(),city:t.z.string().trim().min(1),subdivision:t.z.string().trim().min(1).max(3),postal_code:t.z.string().trim().min(1).optional(),country:t.z.string().trim().min(3).max(3)}),p=t.z.object({type:t.z.string(),issuing_country:t.z.string().trim().min(3).max(3),number:t.z.string().optional(),description:t.z.string().optional(),expiration:t.z.string().optional(),image_front:t.z.string().optional(),image_back:t.z.string().optional()}),c=t.z.object({purposes:t.z.array(t.z.string().trim().min(1)).min(1),file:t.z.string().trim().min(1),description:t.z.string().trim().min(1).optional()}),z=t.z.object({regulated_activities_description:t.z.string().trim().min(1),primary_regulatory_authority_country:t.z.string().trim().min(1),primary_regulatory_authority_name:t.z.string().trim().min(1),license_number:t.z.string().trim().min(1)}),d=t.z.object({first_name:t.z.string().trim().min(1).max(1024),last_name:t.z.string().trim().min(1).max(1024),email:t.z.string().trim().min(1).max(1024).email(),residential_address:m.passthrough(),birth_date:t.z.string().trim().min(10).max(10),has_ownership:t.z.boolean(),has_control:t.z.boolean(),is_signer:t.z.boolean(),identifying_information:t.z.array(p.passthrough()).min(1),middle_name:t.z.string().trim().min(1).max(1024).optional(),transliterated_first_name:t.z.string().trim().min(1).max(256).optional(),transliterated_middle_name:t.z.string().trim().min(1).max(256).optional(),transliterated_last_name:t.z.string().trim().min(1).max(256).optional(),phone:t.z.string().trim().min(2).max(18).startsWith("+").optional(),transliterated_residential_address:m.passthrough().optional(),is_director:t.z.boolean().optional(),title:t.z.string().trim().min(1).max(1024).optional(),ownership_percentage:t.z.number().int().optional(),relationship_established_at:t.z.string().trim().min(10).max(10).optional(),nationality:t.z.string().min(3).max(3).optional(),verified_selfie_at:t.z.string().optional(),completed_customer_safety_check_at:t.z.string().optional(),documents:t.z.array(c.passthrough()).optional()}),g=t.z.object({market_identifier_code:t.z.string().trim().min(1),stock_number:t.z.string().trim(),ticket:t.z.string().trim()}),u=t.z.object({type:t.z.literal("individual"),first_name:t.z.string().trim().min(1).max(1024),last_name:t.z.string().trim().min(1).max(1024),email:t.z.string().trim().min(1).max(1024).email(),residential_address:m.passthrough(),birth_date:t.z.string().trim().min(10).max(10),identifying_information:t.z.array(p.passthrough()).min(1),ofac_screen:t.z.object({screened_at:t.z.string().regex(/^\d{4}-\d{2}-\d{2}$/,"Invalid date format (YYYY-MM-DD)"),result:t.z.enum(["passed"])}).optional(),kyc_screen:t.z.object({screened_at:t.z.string().regex(/^\d{4}-\d{2}-\d{2}$/,"Invalid date format (YYYY-MM-DD)"),result:t.z.enum(["passed"])}).optional(),signed_agreement_id:t.z.string().trim().min(1).max(1024).optional(),middle_name:t.z.string().trim().min(1).max(1024).optional(),transliterated_first_name:t.z.string().trim().min(1).max(256).optional(),transliterated_middle_name:t.z.string().trim().min(1).max(256).optional(),transliterated_last_name:t.z.string().trim().min(1).max(256).optional(),phone:t.z.string().trim().min(2).max(18).startsWith("+").optional(),transliterated_residential_address:m.passthrough().optional(),endorsements:t.z.array(t.z.string()).optional(),account_purpose:t.z.string().optional(),account_purpose_other:t.z.string().optional(),employment_status:t.z.string().optional(),expected_monthly_payments_usd:t.z.string().optional(),acting_as_intermediary:t.z.string().optional(),most_recent_occupation:t.z.string().optional(),source_of_funds:t.z.string().optional(),nationality:t.z.string().min(3).max(3).optional(),verified_selfie_at:t.z.string().optional(),completed_customer_safety_check_at:t.z.string().optional(),documents:t.z.array(c.passthrough()).optional(),has_signed_terms_of_service:t.z.boolean().optional()}),l=t.z.discriminatedUnion("provider",[t.z.object({provider:t.z.literal("bridge"),data:u.passthrough()}),t.z.object({provider:t.z.literal("bridge-sandbox"),data:u.passthrough()})]),_=t.z.object({user_id:t.z.string(),provider_user_id:t.z.string().optional(),status:s}),b=t.z.object({provider:n,full_name:t.z.string().optional(),email:t.z.string().email(),type:t.z.enum(["individual","business"]).optional(),endorsements:t.z.array(t.z.enum(["sepa"])).optional(),redirect_uri:t.z.string().optional()}).passthrough(),y=t.z.object({id:t.z.string(),customer_id:t.z.string(),full_name:t.z.string(),email:t.z.string(),kyc_link:t.z.string(),kyc_status:t.z.enum(["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","approved","rejected"]),rejection_reasons:t.z.array(t.z.object({developer_reason:t.z.string(),reason:t.z.string(),created_at:t.z.string()})),tos_link:t.z.string(),tos_status:t.z.enum(["pending","approved"]),persona_inquiry_type:t.z.string().optional(),created_at:t.z.string()}),h=t.z.enum(["usd","eur"]),x=t.z.object({provider:n}),f=t.z.object({accounts:t.z.array(t.z.object({id:t.z.string(),bank_name:t.z.string().optional(),currency:t.z.string(),account_type:t.z.string(),last_4:t.z.string().optional()}))}),j=t.z.object({street_line_1:t.z.string().trim().min(1),street_line_2:t.z.string().trim().min(1).optional(),city:t.z.string().trim().min(1),postal_code:t.z.string().trim().min(1).optional(),country:t.z.string().trim().min(3).max(3),state:t.z.string().trim().min(1).max(3).optional()}),v=t.z.object({account_number:t.z.string().trim().min(1),routing_number:t.z.string().trim().min(9).max(9),checking_or_savings:t.z.enum(["checking","savings"]).optional()}),k=t.z.object({account_number:t.z.string().trim().min(1),bic:t.z.string().trim().min(1),country:t.z.string().trim().min(3).max(3)}),O=t.z.object({address:j,category:t.z.enum(["client","parent_company","subsidiary","supplier"]),purpose_of_funds:t.z.array(t.z.enum(["intra_group_transfer","invoice_for_goods_and_services"])).min(1),short_business_description:t.z.string().trim().min(1),account:k}),I=t.z.object({provider:n,account_owner_name:t.z.string().trim().min(3).max(256),bank_name:t.z.string().trim().min(3).max(256).optional(),currency:h,iban:k.passthrough().optional(),account:v.passthrough().optional(),swift:O.passthrough().optional(),address:j.passthrough().optional(),first_name:t.z.string().trim().min(1).max(1024).optional(),last_name:t.z.string().trim().min(1).max(1024).optional()}).passthrough().superRefine(((i,n)=>{i.account||i.iban||i.swift||n.addIssue({code:t.z.ZodIssueCode.custom,message:"At least one of account, iban, or swift is required"}),!i.iban||i.first_name&&i.last_name||n.addIssue({code:t.z.ZodIssueCode.custom,message:"first_name and last_name are required when iban is provided"})})),w=t.z.object({id:t.z.string(),bank_name:t.z.string().optional(),currency:t.z.string(),account_type:t.z.string(),last_4:t.z.string().optional()}),A=t.z.enum(["sepa","ach_push","wire"]),F=t.z.enum(["ethereum","base","arbitrum","polygon","optimism"]),R=t.z.enum(["usdc"]),K=t.z.enum(["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","undeliverable","returned","refunded"]),B=t.z.object({amount:t.z.string().trim().min(1),provider:n,source:t.z.object({payment_rail:A,currency:h}).passthrough(),destination:t.z.object({chain:F,currency:R,to_address:i.WalletAddress}).passthrough()}).passthrough(),S=t.z.object({id:t.z.string(),status:K,deposit_instructions:t.z.object({amount:t.z.string(),currency:h,payment_rail:A,deposit_message:t.z.string().optional(),bank_name:t.z.string().optional(),bank_account_number:t.z.string().optional(),bank_routing_number:t.z.string().optional(),bank_beneficiary_name:t.z.string().optional(),bank_beneficiary_address:t.z.string().optional(),bank_address:t.z.string().optional(),iban:t.z.string().optional(),bic:t.z.string().optional(),account_holder_name:t.z.string().optional()})}),q=t.z.object({amount:t.z.string().trim().min(1),provider:n,source:t.z.object({currency:R,chain:F,from_address:i.WalletAddress}).passthrough(),destination:t.z.object({currency:h,payment_rail:A,external_account_id:t.z.string().uuid()}).passthrough()}).passthrough(),D=t.z.object({id:t.z.string(),status:K,deposit_instructions:t.z.object({amount:t.z.string(),currency:R,chain:F,to_address:t.z.string(),from_address:t.z.string()})}),Y=t.z.object({provider:n}).passthrough(),T=t.z.object({transactions:t.z.array(t.z.discriminatedUnion("type",[t.z.object({type:t.z.literal("onramp"),created_at:t.z.string(),destination:t.z.object({chain:t.z.string(),currency:t.z.string(),address:t.z.string(),privy_user_id:t.z.string().optional()}),receipt:t.z.object({final_amount:t.z.string(),transaction_hash:t.z.string().optional()}).optional(),is_sandbox:t.z.boolean()}).extend(S.shape),t.z.object({type:t.z.literal("offramp"),created_at:t.z.string(),destination:t.z.object({payment_rail:t.z.string(),currency:t.z.string(),external_account_id:t.z.string()}),receipt:t.z.object({final_amount:t.z.string(),transaction_hash:t.z.string().optional()}).optional(),is_sandbox:t.z.boolean()}).extend(D.shape)]))});exports.BridgeBusinessAssociatedPerson=d,exports.BridgeKycAddress=m,exports.BridgeKycData=u,exports.BridgeKycDocument=c,exports.BridgeKycIdentifyingInformation=p,exports.BridgeKycInput=b,exports.BridgeKycLinkResponse=y,exports.BridgeRegulatedActivity=z,exports.BridgeTradedListings=g,exports.FiatAccountAddress=j,exports.FiatAccountIbanData=k,exports.FiatAccountSwiftData=O,exports.FiatAccountUsAccountData=v,exports.FiatCurrency=h,exports.FiatPaymentRail=A,exports.GetOnrampFiatAccountStatusInput=x,exports.GetOnrampFiatAccountsResponse=f,exports.GetOnrampKycStatusInput=a,exports.GetOnrampKycStatusResponse=o,exports.GetOnrampTermsOfServiceStatusInput=r,exports.ListFiatTransactionsInput=Y,exports.ListFiatTransactionsResponse=T,exports.OfframpInput=q,exports.OfframpResponse=D,exports.OnrampAsset=R,exports.OnrampChain=F,exports.OnrampFiatAccountInput=I,exports.OnrampFiatAccountResponse=w,exports.OnrampInput=B,exports.OnrampKycInput=l,exports.OnrampKycResponse=_,exports.OnrampKycStatus=s,exports.OnrampProvider=n,exports.OnrampResponse=S,exports.OnrampTermsOfServiceStatusResponse=e,exports.OnrampTransferStatus=K;
