import{z as e}from"zod";import{UnauthorizedError as o,PrivyErrorCode as t}from"@privy-io/api-base";import{SUPPORTED_OAUTH_PROVIDERS as r}from"../constants/oauth.mjs";import{BaseAccountTransferInput as i}from"./account-transfer.mjs";import{AuthenticateMode as n}from"./core.mjs";import{User as s,OAuthTokens as a}from"./user.mjs";import"bs58";import"libphonenumber-js/max";import"viem";import"./smart-wallet-config.mjs";import"../constants/smart-wallets.mjs";const p=e.enum(r,{invalid_type_error:"Please specify a supported provider.",required_error:"Please specify a supported provider."}),m=p.or(e.custom((e=>"string"==typeof e&&/^privy:[a-z0-9]{25}$/i.test(e)),{message:"Please specify a supported provider."})),c=e.object({authorization_code:e.string(),state_code:e.string(),code_verifier:e.string().min(43).max(128).optional(),code_type:e.enum(["raw"]).optional()}).merge(n).catch((()=>{throw new o("Please specify authorization_code and state_code.",t.INVALID_CREDENTIALS)})),l=e.object({redirect_to:e.string({required_error:"Please provide a redirect_to value."}),provider:m,token:e.string().optional(),state_code:e.string().optional(),code_challenge:e.string().optional()}),d=e.object({authorization_code:e.string(),state_code:e.string(),code_verifier:e.string().min(43).max(128).optional(),code_type:e.enum(["raw"]).optional()}),u=e.object({subject:e.string(),provider:m}),g=e.object({url:e.string()}),_=s.extend({oauth_tokens:a.optional()}),f=i.extend({userInfo:e.object({subject:e.string(),name:e.string().optional(),username:e.string().optional(),profilePictureUrl:e.string().optional(),email:e.string().optional().nullable(),vanityName:e.string().optional()})});export{c as AuthenticateOauthInput,p as ExternalOAuthProvider,d as LinkOAuthInput,l as OAuthInitInput,g as OAuthInitResponse,_ as OAuthLinkResponse,m as OAuthProvider,u as OAuthUnlinkInput,r as SUPPORTED_OAUTH_PROVIDERS,f as TransferOAuthInput};
