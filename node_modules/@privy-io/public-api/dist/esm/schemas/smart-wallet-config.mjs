import{z as e}from"zod";import{SUPPORTED_SMART_WALLET_TYPES as t}from"../constants/smart-wallets.mjs";export{BICONOMY,COINBASE_SMART_WALLET,KERNEL,LIGHT_ACCOUNT,SAFE,THIRDWEB}from"../constants/smart-wallets.mjs";const r=e.enum(t,{invalid_type_error:"Please specify a supported provider.",required_error:"Please specify a supported provider."});let n=e.string().regex(/^eip155:\d+$/,"Chain ID must be an eip155 chain ID");const a=e.object({policy_id:e.string().uuid()});let i=e.object({chain_id:n,bundler_url:e.string(),paymaster_url:e.string().optional(),rpc_url:e.string().optional(),chain_name:e.string().optional(),paymaster_context:a.optional()});const o=e.object({chain_id:n,bundler_url:e.string().optional(),paymaster_url:e.string().optional(),rpc_url:e.string().optional(),chain_name:e.string().optional(),paymaster_context:a.optional()}),l=e.discriminatedUnion("enabled",[e.object({enabled:e.literal(!1)}),e.object({enabled:e.literal(!0),smart_wallet_type:r,configured_networks:e.array(i).min(1)})]),s=e.discriminatedUnion("enabled",[e.object({enabled:e.literal(!1)}),e.object({enabled:e.literal(!0),smart_wallet_type:r,configured_networks:e.array(o).min(1)})]),p=l;export{a as AlchemyPaymasterContextSchema,t as SUPPORTED_SMART_WALLET_TYPES,s as SmartWalletConfigurationInputSchema,p as SmartWalletConfigurationResponseSchema,l as SmartWalletConfigurationSchema,o as SmartWalletNetworkConfigurationInputSchema,r as SmartWalletProvider};
