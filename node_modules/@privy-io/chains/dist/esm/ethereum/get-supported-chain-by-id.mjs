import{DEFAULT_SUPPORTED_CHAINS as i}from"./default-supported-chains.mjs";import"./definitions/arbitrum.mjs";import"./definitions/arbitrumSepolia.mjs";import"./definitions/avalanche.mjs";import"./definitions/avalancheFuji.mjs";import"./definitions/base.mjs";import"./definitions/baseSepolia.mjs";import"./definitions/berachainArtio.mjs";import"./definitions/celo.mjs";import"./definitions/celoAlfajores.mjs";import"./definitions/filecoin.mjs";import"./definitions/filecoinCalibration.mjs";import"./definitions/garnetHolesky.mjs";import"./definitions/holesky.mjs";import"./definitions/linea.mjs";import"./definitions/lineaTestnet.mjs";import"./definitions/lukso.mjs";import"./definitions/mainnet.mjs";import"./definitions/optimism.mjs";import"./definitions/optimismSepolia.mjs";import"./definitions/polygon.mjs";import"./definitions/polygonAmoy.mjs";import"./definitions/redstone.mjs";import"./definitions/sepolia.mjs";import"./definitions/zora.mjs";import"./definitions/zoraSepolia.mjs";import"./definitions/zoraTestnet.mjs";const o=o=>i.find((i=>i.id===o));export{o as getSupportedChainById};
