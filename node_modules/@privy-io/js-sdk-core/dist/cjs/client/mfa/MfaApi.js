"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../Error.js"),r=require("./MfaPasskeyApi.js"),t=require("./MfaSmsApi.js");require("@privy-io/public-api");exports.default=class{setProxy(e){this.proxy=e}async getAccessToken(){let r=await this.privyInternal.getAccessToken();if(!r)throw new e.PrivyClientError({error:"Missing access token",code:"attempted_rpc_call_before_logged_in"});return r}async verifyMfa(){if(!this.proxy)throw new e.PrivyClientError({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.verifyMfa({accessToken:await this.getAccessToken()})}async initEnrollMfa(r){if(!this.proxy)throw new e.PrivyClientError({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.initEnrollMfa({...r,accessToken:await this.getAccessToken()})}async submitEnrollMfa(r){if(!this.proxy)throw new e.PrivyClientError({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});let t=await this.proxy.submitEnrollMfa({...r,accessToken:await this.getAccessToken()});return await this.privyInternal.refreshSession(),t}async unenrollMfa(r){if(!this.proxy)throw new e.PrivyClientError({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});let t=await this.proxy.unenrollMfa({method:r,accessToken:await this.getAccessToken()});return await this.privyInternal.refreshSession(),t}async clearMfa(r){if(!this.proxy)throw new e.PrivyClientError({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.clearMfa(r)}constructor(e,i){this.proxy=i,this.privyInternal=e,this.sms=new t.default(e),this.passkey=new r.default(e)}};
