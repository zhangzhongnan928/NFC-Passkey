import{z as e}from"zod";import{UnauthorizedError as r,PrivyErrorCode as o}from"@privy-io/api-base";import{EmptyObject as t}from"./object.mjs";const i=e.object({chain_type:e.string().optional()}),n=e.object({recovery_type:e.enum(["user_passcode_derived_recovery_key","privy_passcode_derived_recovery_key","privy_generated_recovery_key","google_drive_recovery_secret","icloud_recovery_secret"]),recovery_key_derivation_salt:e.string(),recovery_code:e.string(),recovery_key:e.string(),file_id:e.string(),icloud_record_name:e.string()}),c=e.object({access_token:e.string()}),_=e.object({redirect_to:e.string({required_error:"Please provide a redirect_to value."}),token:e.string().optional(),state_code:e.string().optional(),code_challenge:e.string().optional()}),s=e.object({client_type:e.enum(["web","expo-ios"])}),a=e.object({ckWebAuthToken:e.string()}).transform((e=>({ckWebAuthToken:e.ckWebAuthToken}))).catch((()=>{throw new r("Missing ckWebAuthToken.",o.INVALID_DATA)})),d=t,p=e.object({client_type:e.enum(["web","expo-ios"])}),y=e.object({api_token:e.string(),container_identifier:e.string(),environment:e.string()});export{c as OAuthAuthenticateRecoveryResponse,a as OAuthCallbackICloudExpoInput,d as OAuthCallbackICloudExpoResponse,s as OAuthInitICloudRecoveryInput,_ as OAuthInitRecoveryInput,p as RecoveryConfigurationICloudInput,y as RecoveryConfigurationICloudResponse,i as RecoveryKeyMaterialInput,n as RecoveryKeyMaterialResponse};
